"use strict";var e=require("pg-promise");var t=require("pg-monitor");var n=require("dotenv");var o=require("winston");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}require("bitcoind-rpc"),require("bitcoin-computer-bitcore");var a=r(e);var S=r(t);r(n).default.config();const{PORT:R=3e3,ZMQ_URL:i="tcp://litecoind:28332",CHAIN:E="LTC",NETWORK:O="regtest",BCN_ENV:_="dev",BCN_URL:s="http://127.0.0.1:3000",DEBUG_MODE:T=1,POSTGRES_USER:c="bcn",POSTGRES_PASSWORD:P="bcn",POSTGRES_DB:d="bcn",POSTGRES_HOST:l="127.0.0.1",POSTGRES_PORT:C=5432,RPC_PROTOCOL:m="http",RPC_USER:f="bcn-admin",RPC_PASSWORD:N="kH4nU5Okm6-uyC0_mA5ztVNacJqZbYd_KGLl6mx722A=",RPC_HOST:u="litecoind",RPC_PORT:G=19332,SERVER_VERSION:b=.1,DEFAULT_WALLET:p="defaultwallet"}=process.env;var D={PORT:R,ZMQ_URL:i,CHAIN:E,NETWORK:O,BCN_ENV:_,BCN_URL:s,DEBUG_MODE:T,POSTGRES_USER:c,POSTGRES_PASSWORD:P,POSTGRES_DB:d,POSTGRES_HOST:l,POSTGRES_PORT:C,POSTGRES_MAX_PARAM_NUM:65535,RPC_PROTOCOL:m,RPC_USER:f,RPC_PASSWORD:N,RPC_HOST:u,RPC_PORT:G,SYNC_HEIGHT:1,SYNC_INTERVAL_CHECK:3e3,SERVER_VERSION:b,DB_CONNECTION_RETRY_TIME:3e3,SIGNATURE_FRESHNESS_MINUTES:3,DEFAULT_WALLET:p};const A=o.createLogger({level:"info",format:o.format.json(),transports:[new o.transports.File({filename:"error.log",level:"error"}),new o.transports.File({filename:"combined.log"})]});A.add(new o.transports.Console({format:o.format.combine(o.format.colorize(),o.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),o.format.printf((e=>`${e.level} ${e.message} [2m${e.timestamp}[0m`)))}));const L={error:(e,t)=>{t.cn&&A.info(`Connection to db failed: ${JSON.stringify(t.cn)} ${e}`)},noWarnings:!0};"dev"===D.BCN_ENV&&"1"===D.DEBUG_MODE&&(S.default.isAttached()?S.default.detach():(S.default.attach(L),S.default.setTheme("matrix")));const U=a.default(L)({host:D.POSTGRES_HOST,port:D.POSTGRES_PORT,database:D.POSTGRES_DB,user:D.POSTGRES_USER,password:D.POSTGRES_PASSWORD,allowExitOnIdle:!0,idleTimeoutMillis:100});describe("db",(()=>{describe("getConnection",(()=>{it("Should establish a database connection",(async()=>{expect(U).toBeDefined()}))})),describe("getConnection",(()=>{it("Should establish a database connection",(async()=>{const e=await U.any('SELECT "id" FROM "Transactions" LIMIT 1');expect(e).toBeDefined()}),2e4)}))}));
